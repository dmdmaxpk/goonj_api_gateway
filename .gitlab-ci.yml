stages:
  - build
  - staging
  - production

variables:
  DEPLOYMENT_NAME: api-v2
  DOCKER_REGISTRY: 652891063711.dkr.ecr.eu-central-1.amazonaws.com/$DEPLOYMENT_NAME

build:
  stage: build
  image: docker:19.03.1
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.1-dind
  before_script:
    - docker info
    - apk add --no-cache curl jq python3 py3-pip
    - pip3 install awscli
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - docker build -t $DOCKER_REGISTRY:$CI_COMMIT_TAG .
    - docker push $DOCKER_REGISTRY:$CI_COMMIT_TAG
  only:
    - tags

.kubectl_config: &kubectl_config
  - aws eks --region eu-central-1 update-kubeconfig --name goonj-v2

staging:
  image: docker.io/sulemanhasib43/eks:latest
  stage: staging
  variables:
    K8S_NAMESPACE: staging
  before_script: *kubectl_config
  script:
    - kubectl version
    - kubectl -n $K8S_NAMESPACE patch deployment $DEPLOYMENT_NAME -p '{"spec":{"template":{"spec":{"containers":[{"name":"'"$DEPLOYMENT_NAME"'","image":"'"$DOCKER_REGISTRY:$CI_COMMIT_TAG"'"}]}}}}'
  only:
    - tags

production:
  image: docker.io/sulemanhasib43/eks:latest
  stage: production
  variables:
    K8S_NAMESPACE: production
  before_script: *kubectl_config
  script:
    - kubectl version
    - kubectl -n $K8S_NAMESPACE patch deployment $DEPLOYMENT_NAME -p '{"spec":{"template":{"spec":{"containers":[{"name":"'"$DEPLOYMENT_NAME"'","image":"'"$DOCKER_REGISTRY:$CI_COMMIT_TAG"'"}]}}}}'
  only:
    - tags
    - master
# stages:
#   - build
#   - test
#   - deploy

# # Deploy Staging on push to staging branch
# deployStaging:
#   stage: deploy
#   script:
#     - cd /opt/deployable/ansible/
#     - ansible-playbook -i inv_staging goonj_api_gateway.yml --vault-password-file=vault.crypt -e 'branchName=staging'
#   environment:
#     name: staging
#   only:
#     refs:
#       - branches
#     variables:
#       - $CI_COMMIT_REF_NAME == "staging"
#   except:
#     changes:
#       - .gitlab-ci.yml

# deployProduction:
#   stage: deploy
#   script:
#     - cd /opt/deployable/ansible/
#     - ansible-playbook -i inv_production_mw goonj_api_gateway.yml --vault-password-file=vault.crypt -e 'branchName=master'
#   environment:
#     name: production
#   only:
#     - master
#   when: manual
